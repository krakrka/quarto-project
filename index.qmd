# Sommaire
- [Chapitre 1: Introduction à R et Bases de R](#chapitre-introduction)
- [Ressources](#ressources)
- [Qu'est-ce que R ?](#qu-est-ce-que-r)
- [Analyse des données](#analyse-des-donnees)
- [Installation de R et RStudio sur différentes plateformes](#installation-de-r-et-rstudio)
- [Interface de RStudio](#interface-de-rstudio)
- [Voici quelques exemples d'utilisation](#exemples-d-utilisation)

# Chapitre 1: Introduction à R et Bases de R
R a vu le jour en 1993 comme un langage de programmation open source conçu spécifiquement pour l'analyse statistique et la visualisation de données. Avec sa facilité d'apprentissage et son efficacité avérée, il est devenu un outil incontournable pour tous ceux qui travaillent dans le domaine de la science des données.
L'objectif de ce cours est de vous fournir une solide base en programmation R, en mettant l'accent sur la compréhension des concepts fondamentaux, la pratique régulière et l'évaluation continue de vos compétences.

# Ressources
- Rbloggers : Un blog populaire sur le langage R
- Datacamp : Une plateforme interactive d'apprentissage de la science des données
- Introduction accélérée au langage R pour la science des données : Un résumé complet de ce que nous aborderons

# Qu'est-ce que R ?
R a été élaboré par des mathématiciens pour servir de langage de programmation et d'environnement logiciel libre dédié à l'analyse statistique et à la création de graphiques. Il est largement adopté par les statisticiens, les spécialistes en science des données et les chercheurs pour leurs diverses analyses et travaux de recherche. L'un de ses principaux atouts réside dans sa capacité à s'intégrer facilement à d'autres langages de programmation tels que Python, Java et C++. De plus, la richesse de sa bibliothèque de packages en fait un outil extrêmement adaptable et évolutif.

# Analyse des données
Tout d'abord il faut savoir que l'analyse des données consiste à inspecter, nettoyer, transformer et modéliser les données dans le but de découvrir des informations utiles de les traiter et les rendre plus facilement lisible et donc de soutenir la prise de décision.
Avec R, vous pouvez effectuer toutes ces étapes de manière efficace et précise. Dans ce cours, nous couvrirons les concepts de base de l'analyse des données avec R : types de données, manipulation des données, visualisation des données et interprétation des résultats de l'analyse.

# Installation de R et RStudio sur différentes plateformes
- **Installation de R :** Rendez-vous sur le site officiel de R et téléchargez la version appropriée pour votre système d'exploitation (Windows, Mac, Linux). Suivez les instructions d'installation.
- **Installation de RStudio :** Après avoir installé R, rendez-vous sur le site officiel de RStudio et téléchargez la version gratuite de RStudio Desktop. Installez-le comme vous le feriez pour n'importe quel autre logiciel.

# Interface de RStudio
Une fois RStudio installé, ouvrez-le. Vous verrez quatre panneaux principaux :
- La console
- L'éditeur de script (source)
- L'environnement et l'historique
- Les fichiers/plots/packages/aide (output)
RStudio est une interface de développement intégrée (IDE) pour R qui offre une interface utilisateur conviviale, facilitant l'écriture de code, l'exécution de scripts et la visualisation des résultats.

# Voici quelques exemples d'utilisation 

1. Introduction à R
Dans cette leçon, nous explorerons les bases de R, y compris l'installation, la syntaxe de base et les structures de données fondamentales.

````{r}
# 1. Quelques fonctions 

#Nous utilisons la fonction rnorm() pour générer 100 nombres aléatoires suivant une distribution normale pour les variables x et y.

#La fonction set.seed() est utilisée pour fixer la graine aléatoire, assurant ainsi la reproductibilité des résultats.

set.seed(123)  
x <- rnorm(100)  
y <- rnorm(100, mean = 2, sd = 1)  

# 2. Affichage des données

# Nous affichons les valeurs des variables x et y.

print(x)
print(y)

# 3. Calcul de statistiques descriptives

# Nous calculons la moyenne et l'écart type de la variable x, ainsi que les quantiles de la variable x.

mean_x <- mean(x)
sd_x <- sd(x)
quantile_x <- quantile(x)

# 4. Affichage des statistiques

# Nous affichons les statistiques calculées pour la variable x.

print(mean_x)
print(sd_x)
print(quantile_x)

# 5. Création d'un histogramme

# Nous créons un histogramme pour visualiser la distribution des valeurs de la variable x.

hist(x, main = "Histogramme de x", xlab = "Valeurs de x", ylab = "Fréquence")

# 6. Création d'un nuage de points

# Nous créons un nuage de points pour visualiser la relation entre les variables x et y.

plot(x, y, main = "Nuage de points", xlab = "Variable X", ylab = "Variable Y")

# 7. Régression linéaire

# Nous ajustons un modèle de régression linéaire pour prédire la variable y en fonction de la variable x.

model <- lm(y ~ x)  
summary(model)  

# 8. Affichage de la droite de régression sur le nuage de points

# Maintenant on va superposer la droite de régression sur le nuage de points pour visualiser la relation linéaire.

abline(model, col = "red")

# 9. Test statistique

# Nous effectuons un test de Student pour comparer les moyennes des deux échantillons (variables x et y).

t_test <- t.test(x, y)  
print(t_test)

# 10. Création d'une fonction personnalisée

# Nous définissons une fonction personnalisée qui prend deux arguments a et b, et retourne leur somme des carrés.

my_function <- function(a, b) {
  result <- a^2 + b^2
  return(result)
}

# 11. Utilisation de la fonction personnalisée

# Nous utilisons la fonction personnalisée pour calculer la somme des carrés de 3 et 4.

result <- my_function(3, 4)
print(result)
````

En conclusion, cet exercice nous a permis d'explorer diverses fonctionnalités de R, allant de la génération de données aléatoires à l'ajustement de modèles statistiques, en passant par la création de graphiques et l'utilisation de fonctions personnalisées. En pratiquant ces différentes étapes, nous avons pu acquérir une meilleure compréhension des capacités de programmation et d'analyse de données offertes par R, renforçant ainsi nos compétences dans ce langage.